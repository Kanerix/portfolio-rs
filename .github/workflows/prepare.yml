name: Prepare pipeline 

on:
  workflow_call:
    outputs:
      DEPLOY_ENV:
        description: What kind of deployment this is
        value: ${{ jobs.prepare-pipeline.outputs.DEPLOY_ENV }}
      
      RUST_TOOLCHAIN:
        description: The toolchain for Rust to use
        value: ${{ jobs.prepare-pipeline.outputs.RUST_ENV }}
      
      IMAGE_NAME:
        description: The name of the image to build
        value: ${{ jobs.prepare-pipeline.outputs.IMAGE_NAME }}

jobs:
  prepare-pipeline:
      runs-on: ubuntu-latest

      outputs:
        DEPLOY_ENV: ${{ steps.deploy-env.outputs.DEPLOY_ENV }}
        RUST_ENV: ${{ steps.rust-toolchain.outputs.RUST_TOOLCHAIN }}
        IMAGE_NAME: ${{ steps.image-name.outputs.IMAGE_NAME }}

      steps:
        - name: Set deployment variable 
          id: deploy-env
          env:
            BRANCH: ${{ github.ref_name }}
          run: |
            if [[ $BRANCH == "main" || $BRANCH == "master" ]]; then
                DEPLOY_ENV=PROD
            elif [[ $BRANCH == "staging" ]]; then
                DEPLOY_ENV=STAGING
            else
                DEPLOY_ENV=TEST
            fi

            echo "DEPLOY_ENV="$DEPLOY_ENV
            echo "DEPLOY_ENV=$DEPLOY_ENV" >> $GITHUB_OUTPUT
        
        - name: Set Rust toolchain 
          id: rust-toolchain
          env:
            RUST_TOOLCHAIN: ${{ vars.RUST_TOOLCHAIN }}
          run: |
            if [[ -n "$RUST_TOOLCHAIN" ]]; then
                RUST_TOOLCHAIN=$RUST_TOOLCHAIN
            else
                RUST_TOOLCHAIN=stable
            fi

            echo "RUST_TOOLCHAIN="$RUST_TOOLCHAIN
            echo "RUST_TOOLCHAIN=$RUST_TOOLCHAIN" >> $GITHUB_OUTPUT

        - name: Set image name
          id : image-name
          env:
            GIT_REPOSITORY: ${{ github.repository }}
          run: |
            IMAGE_NAME=$(echo "${GITHUB_REPOSITORY}" | tr '[:upper:]' '[:lower:]')
            echo "IMAGE_NAME=$IMAGE_NAME"
            echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_OUTPUT
        
        - name: Write prepare summary
          run: |
            echo "### Prepare pipeline:               
            <table>
                <tr>
                    <td>üéØ Deploy env</td>
                    <td>${{ steps.deploy-env.outputs.DEPLOY_ENV }}</td>
                </tr>
                <tr>
                    <td>ü¶Ä Rust toolchain</td>
                    <td>${{ steps.rust-toolchain.outputs.RUST_TOOLCHAIN }}</td>
                </tr>
                <tr>
                    <td>üê≥ Image name</td>
                    <td>${{ steps.image-name.outputs.IMAGE_NAME }}</td>
                </tr>
            </table>" >> $GITHUB_STEP_SUMMARY