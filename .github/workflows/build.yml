name: Build and push docker image

on:
  workflow_call:
    inputs:
      DEPLOY_ENV: 
        description: 'The environment to deploy to'
        required: true
        type: string

      RUST_TOOLCHAIN:
        description: The Rust toolchain to use
        required: true
        type: string 

      IMAGE_NAME:
        description: The name of the image to build
        required: true
        type: string

    outputs:
      DOCKER_IMAGE:
        description: Name of Docker image
        value: ${{ jobs.build-and-push-image.outputs.DOCKER_IMAGE }}

env:
  DOCKER_REGISTRY: ghcr.io

jobs:
  build-and-push-image:
    if: inputs.DEPLOY_ENV == 'PROD'
    runs-on: ubuntu-latest

    environment: ${{ inputs.DEPLOY_ENV }}

    permissions:
      contents: read
      packages: write

    outputs:
      DOCKER_IMAGE: ${{ steps.docker-meta.outputs.tags }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Docker BuildX
        uses: docker/setup-buildx-action@v3

      - name: Log in to the container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Docker meta-data
        id: docker-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ github.repository }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          build-args: |
            DEPLOY_ENV=${{ inputs.DEPLOY_ENV }}
            RUST_TOOLCHAIN=${{ inputs.RUST_TOOLCHAIN }}
          tags: ${{ steps.docker-meta.outputs.tags }}
          labels: ${{ steps.docker-meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Write summary
        run: |
          echo "### Build 🐳" >> $GITHUB_STEP_SUMMARY
          echo "Docker image: $DOCKER_IMAGE"  >> $GITHUB_STEP_SUMMARY
        env:
          DOCKER_IMAGE: ${{ steps.docker-meta.outputs.tags }}
